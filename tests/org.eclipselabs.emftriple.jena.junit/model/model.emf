@namespace(uri="http://www.eclipselabs.org/emf/junit", prefix="org.eclipselabs.emf.junit")
package model;

class Person {
  attr String name;
  ref Book[*]#authors books;
}

class Book {
  attr String title;
  ref Person[*]#books authors;
  attr String[*] tags;
  attr char[*] data;
}

class PersonBNode {
  attr String name;
  val BookBNode[*] books;	   
}

@BlankNode(foo=bar)
class BookBNode {
   attr String title;
   ref PersonBNode[*] authors;
}

class BNode {
   attr int ~id;
   @BlankNode(foo=bar)   
   val BNode[*] child;
}

class Library {
  !resolve val Book[*] books;
  val Location location;
  ref Book latestBook;
}

class Location {
  attr String address;
  ref Book featuredBook;
  transient derived id attr EJavaObject ~id;
}

class ETypes {
  attr EBigDecimal eBigDecimal;
  attr EBigInteger eBigInteger;
  attr boolean eBoolean;
  attr byte eByte;
  attr ecore.EByteArray eByteArray;
  attr char eChar;
  attr EDate eDate;
  attr double eDouble;
  attr float eFloat;
  attr int eInt;
  attr long eLong;
  attr short eShort;
  attr String eString;
  attr URI[*] uris;
}

class MappedLibrary {
  val Location location;

  @ExtendedMetaData(group="#books")
  volatile transient derived !resolve val Book[*] rareBooks;

  @ExtendedMetaData(group="#books")
  volatile transient derived !resolve val Book[*] regularBooks;

  @ExtendedMetaData(kind="group")
  attr ecore.EFeatureMapEntry books;
}

class PrimaryObject {
  @Id(base="http://junit.org/primary/")
  id attr int ~id;
  attr String name;
  unsettable attr String unsettableAttribute;
  unsettable attr String unsettableAttributeWithDefault = "foo";
  
  unsettable ref TargetObject unsettableReference;
  ref TargetObject singleNonContainmentReference;
  ref TargetObject[*] multipleNonContainmentReference;
  
  !resolve val TargetObject singleContainmentReferenceNoProxies;
  !resolve val TargetObject[*] multipleContainmentReferenceNoProxies;
  
  val TargetObject singleContainmentReferenceProxies;
  val TargetObject[*] multipleContainmentReferenceProxies;

  @ExtendedMetaData(group="#featureMapReferenceCollection")
  volatile transient derived !resolve val TargetObject[*] featureMapReferenceType2;

  @ExtendedMetaData(group="#featureMapReferenceCollection")
  volatile transient derived !resolve val TargetObject[*] featureMapReferenceType1;

  @ExtendedMetaData(kind="group")
  attr ecore.EFeatureMapEntry featureMapReferenceCollection;

  @ExtendedMetaData(group="#featureMapAttributeCollection")
  volatile transient derived attr String[*] featureMapAttributeType1;

  @ExtendedMetaData(group="#featureMapAttributeCollection")
  volatile transient derived attr String[*] featureMapAttributeType2;

  @ExtendedMetaData(kind="group")
  attr ecore.EFeatureMapEntry[*] featureMapAttributeCollection;
}

class TargetObject {
  @Id(base="http://junit.org/target/")
  id attr int ~id;
  attr String singleAttribute;
  attr String[*] arrayAttribute;
}

@OWLClass(uri="http://data.linkedmdb.org/resource/movie/film")
class Movie {
   @Id(base="http://data.linkedmdb.org/resource/film/")
   @rdf(uri="http://data.linkedmdb.org/resource/movie/filmid")
   attr int ~id;
   
   @rdf(uri="http://purl.org/dc/terms/title")
   attr String title;
   
   @rdf(uri="http://data.linkedmdb.org/resource/movie/actor")
   ref Actor[*]#actorOf actors; 
}

@OWLClass(uri="http://data.linkedmdb.org/resource/movie/actor")
class Actor {
   @Id(base="http://data.linkedmdb.org/resource/actor/")
   @rdf(uri="http://data.linkedmdb.org/resource/movie/actor_actorid")
   attr int ~id;
   
   @rdf(uri="http://data.linkedmdb.org/resource/movie/actor_name")
   attr String name;
   
   @rdf(uri="http://data.linkedmdb.org/resource/movie/actor")
   ref Movie[*]#actors actorOf;
}

datatype URI : org.eclipse.emf.common.util.URI;

